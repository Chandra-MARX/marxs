[MARX]
# The local path to the marx source code and a compiled version goes here
# Careful: Compile as shared library or with -fPIC
# If left empty, the MARX C code is not going to be available
# See installation instruction for details
srcdir =
libdir =

# Examples could be
#srcdir = /melkor/d1/guenther/marx/dist/
#libdir = /melkor/d1/guenther/marx/installed/devPIC/lib/
#srcdir = /Users/hamogu/code/dist/
#libdir = /Users/hamogu/marx/devPIC/lib/

[metadata]
name = marxs
description = Multi Architecture Raytracer for X-ray satellites
long_description = MARXS (Multi-Architecture-Raytrace-Xraymission-Simulator) is a toolsuite to simulate the performance X-ray observatories. It is primarily aimed at astronomical X-ray satellites and sounding rocket payloads, but can be used to ray-trace experiments in the laboratory as well. MARXS performs Monte-Carlo ray-trace simulations from a source (astronomical or lab) through a collection of optical elements such as mirrors, baffles, and gratings to a detector.
author = MIT / H. M. GÃ¼nther
author_email = hgunther@mit.edu
license = GPLv3+
license_files = LICENSE
url = http://marxs.readthedocs.io
edit_on_github = True
github_project = Chandra-marx/marxs
python_requires = ">=3.7"

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    numpy
    astropy
    transforms3d
    scipy
    matplotlib
    cffi
    x3d

[options.extras_require]
all =
    mayavi
    PyQt5
    jsonschema
test =
    pytest-astropy
    pyyaml
    sphinx-astropy
docs =
    sphinx-astropy
    pyyaml

[tool:pytest]
testpaths = "marxs" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    marxs/_astropy_init*
    marxs/conftest.py
    marxs/*setup_package*
    marxs/tests/*
    marxs/*/tests/*
    marxs/extern/*
    marxs/version*
    */marxs/_astropy_init*
    */marxs/conftest.py
    */marxs/*setup_package*
    */marxs/tests/*
    */marxs/*/tests/*
    */marxs/extern/*
    */marxs/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_

[options.package_data]
* = *.fits, *.csv, *.txt
marxs.missions.chandra = HESSdesign.rdb
marxs.optics = hrma.par, cdef.txt, data/*
marxs.visualization = threejs_files/*
marxs.design.tests = data/*

